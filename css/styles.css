/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.sticky {
  position: sticky;
}
.top-\[75\%\] {
  top: 75%;
}
.z-50 {
  z-index: 50;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.ml-\[100px\] {
  margin-left: 100px;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.h-screen {
  height: 100vh;
}
.min-h-screen {
  min-height: 100vh;
}
.w-1\/3 {
  width: calc(1/3 * 100%);
}
.w-\[70\%\] {
  width: 70%;
}
.w-\[85\%\] {
  width: 85%;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.cursor-pointer {
  cursor: pointer;
}
.list-none {
  list-style-type: none;
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t-2 {
  border-top-style: var(--tw-border-style);
  border-top-width: 2px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}
.bg-clip-text {
  -webkit-background-clip: text;
          background-clip: text;
}
.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}
.text-center {
  text-align: center;
}
.text-wrap {
  text-wrap: wrap;
}
.text-transparent {
  color: transparent;
}
.underline {
  text-decoration-line: underline;
}
.decoration-wavy {
  text-decoration-style: wavy;
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-150 {
  --tw-duration: 150ms;
  transition-duration: 150ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
       user-select: none;
}
.hover\:border-dotted {
  &:hover {
    @media (hover: hover) {
      --tw-border-style: dotted;
      border-style: dotted;
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@font-face {
  font-family: "DOSFont";
  src: url("../font/Perfect DOS VGA 437.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-duration: initial;
    }
  }
}
